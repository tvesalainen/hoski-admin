<?xml version="1.0" encoding="iso-8859-1" standalone="yes" ?>
<!--
   Copyright (C) 2012 Helsingfors Segelklubb ry
  
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
  
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Affero General Public License for more details.
  
   You should have received a copy of the GNU Affero General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<project name="hoskiadmin" default="dist" basedir=".">

  <target name="init">
    <property name="hoskilib.path" value="../HoskiLibNNB" />
    <property file="${hoskilib.path}/private.properties"/>
    <property file="${hoskilib.path}/hoskilib.properties"/>
    <property file="hoskiadmin.properties"/>
    <property name="classpath" value="${hoskilib.jar}:${appengine.api.jar}:${appengine.remote.api.jar}:${opencsv.jar}:${json.jar}:${gdata-client.jar}:${gdata-core.jar}:${gdata-spreadsheet.jar}:${guava.jar}:${dsql.jar}"/>

    <property name="build.debug" value="true"/>

    <fileset id="ext-libs"
             dir="lib"
             includes="*.jar"/>

    <path id="project.class.path">
      <fileset refid="ext-libs"/>
    </path>
  </target>

  <!-- Compile servlets and make language translation -->
  <target name="build" depends="init">
    <mkdir dir="build"/>

    <tstamp>
        <format property="current.time" pattern="yyyy.MM.dd HH:mm:ss" />
    </tstamp>
    <echo file="src/fi/hoski/remote/Version.java">
package fi.hoski.remote;
public class Version
{
    public static String version()
    {
        return "${current.time}";
    }
}
    </echo>
    <javac srcdir="src"
	   destdir="build"
           debug="true"
           source="${java.target}"
           target="${java.target}"
           includeantruntime="false" 
           classpath="${classpath}"
           encoding="utf-8"
    >
    </javac>
    <copy todir="build">
      <fileset dir="src" excludes="**/*.java" />
    </copy>
  </target>

  <target name="dist" depends="build">
    <mkdir dir="dist"/>
    <mkdir dir="dist/lib"/>
    <jar destfile="dist/hoskilib.jar" basedir="build" >
        <manifest>
            <attribute name="Main-Class" value="fi.hoski.remote.ui.Admin"/>
            <attribute name="Class-Path" value="lib/appengine-api-1.0-sdk-${appengine.version}.jar lib/appengine-remote-api.jar lib/dsql.jar lib/gdata-client-1.0.jar lib/gdata-core-1.0.jar lib/gdata-spreadsheet-3.0.jar lib/guava-12.0.jar lib/hoskilib.jar lib/htmllexer.jar lib/htmlparser.jar lib/json-org.jar lib/opencsv-2.3.jar"/>
        </manifest>
    </jar>
    <copy file="${hoskilib.jar}" todir="dist/lib"/>
    <copy file="${appengine.api.jar}" todir="dist/lib"/>
    <copy file="${appengine.remote.api.jar}" todir="dist/lib"/>
    <copy file="${htmllexer.jar}" todir="dist/lib"/>
    <copy file="${htmlparser.jar}" todir="dist/lib"/>
    <copy file="${opencsv.jar}" todir="dist/lib"/>
    <copy file="${json.jar}" todir="dist/lib"/>
    <copy file="${guava.jar}" todir="dist/lib"/>
    <copy file="${gdata-core.jar}" todir="dist/lib"/>
    <copy file="${gdata-client.jar}" todir="dist/lib"/>
    <copy file="${gdata-spreadsheet.jar}" todir="dist/lib"/>
    <copy file="${dsql.jar}" todir="dist/lib"/>
    <copy file="sample.properties" todir="dist"/>
    <zip destfile="${hoskiwebapp.path}/web/RaceAdmin.zip" basedir="dist"/>
  </target>

  <target name="run" depends="dist"
          description="Starts the Admin console">
    <java jar="dist/hoskilib.jar"
          fork="true"
          >
        <arg value="sample.properties"/>
    </java>
  </target>
  
  <!-- Cleans all by removing build directories. -->
  <target name="clean" depends="init"
          description="Cleans all by removing build and dist directories">
    <delete dir="build" />
    <delete dir="dist/lib" />
    <delete dir="dist" />
  </target>
</project>
